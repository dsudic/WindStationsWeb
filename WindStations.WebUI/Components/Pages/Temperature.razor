@page "/temperature"

<h3>Temperature</h3>

<div style="height: 450px">
    @if (temperatures == null)
    {
        <SfSkeleton Width="100%" Height="100%" Effect="ShimmerEffect.Wave"></SfSkeleton>
    }
    else
    {
        <SfChart Background="transparent">
            <ChartArea>
                <ChartAreaBorder Width="0"></ChartAreaBorder>
            </ChartArea>

            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" LabelPlacement="LabelPlacement.OnTicks" EdgeLabelPlacement="EdgeLabelPlacement.Shift" PlotOffset="10">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            </ChartPrimaryXAxis>

            <ChartPrimaryYAxis LabelFormat="{value} °C" RangePadding="ChartRangePadding.Auto">
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>

                <ChartStriplines>
                    <ChartStripline Start=@temperatures.Max(t => t.Temperature) SizeType="SizeType.Pixel" DashArray="3,3" Size="1" Color="#d93237" Text="Max" HorizontalAlignment="Syncfusion.Blazor.Charts.Anchor.End" VerticalAlignment="Syncfusion.Blazor.Charts.Anchor.End">
                        <ChartStriplineTextStyle Color="#d93237" Size="14px" FontWeight="500" FontStyle="Roboto"></ChartStriplineTextStyle>
                    </ChartStripline>
                </ChartStriplines>
            </ChartPrimaryYAxis>

            <ChartTooltipSettings Enable="true" Header="${point.x}" Format="${point.y}"></ChartTooltipSettings>

            <ChartSeriesCollection>
                <ChartSeries DataSource="@temperatures" XName="Time" YName="Temperature" Fill="url(#temperature-gradient)" Type="ChartSeriesType.Area">
                    <ChartSeriesBorder Width="2" Color="#e94d00"></ChartSeriesBorder>
                    <ChartMarker>
                        <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Top">
                            <Template>
                                <div>@Math.Round(Convert.ToDouble(context.PointY))</div>
                            </Template>
                        </ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>

        <svg style="height: 0">
            <defs>
                <linearGradient id="temperature-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                    <stop offset="0%" style="stop-color: white; stop-opacity: 0.5" />
                    <stop offset="100%" style="stop-color: #e56c30; stop-opacity: 0.5" />
                </linearGradient>
            </defs>
        </svg>
    }
</div>

@code {
    private class Environment
    {
        public string Time { get; set; }
        public double Temperature { get; set; }
    }

    private List<Environment> temperatures = new List<Environment>
    {
        new Environment { Time = "11h", Temperature = 35.5 },
        new Environment { Time = "12h", Temperature = 33.3 },
        new Environment { Time = "13h", Temperature = 38.2 },
        new Environment { Time = "14h", Temperature = 31.8 },
        new Environment { Time = "15h", Temperature = 36.6 },
        new Environment { Time = "16h", Temperature = 32.5 },
        new Environment { Time = "17h", Temperature = 34.3 },
        new Environment { Time = "18h", Temperature = 30.1 },
        new Environment { Time = "19h", Temperature = 28.11 },
        new Environment { Time = "20h", Temperature = 25.34 },
        new Environment { Time = "21h", Temperature = 22.6 },
        new Environment { Time = "22h", Temperature = 21.3 }
    };
}
