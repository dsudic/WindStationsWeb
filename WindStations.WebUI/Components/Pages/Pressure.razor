@page "/pressure"
@using WindStations.WebUI.Components.ChartDataPointModels
@inject WindStations.Core.Interfaces.IEnvironmentService environmentService

<h3>Pressure</h3>

<div style="height: 450px">
    @if (_pressureData is null)
    {
        <SfSkeleton Width="100%" Height="100%" Effect="ShimmerEffect.Wave"></SfSkeleton>
    }
    else
    {
        <SfChart Background="transparent">
            <ChartArea>
                <ChartAreaBorder Width="0"></ChartAreaBorder>
            </ChartArea>

            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime"
                               Format="HH:mm:ss"
                               LabelFormat="HH:mm"
                               LabelPlacement="LabelPlacement.OnTicks"
                               EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                               PlotOffset="10">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            </ChartPrimaryXAxis>

            <ChartPrimaryYAxis LabelFormat="{value} hPa" RangePadding="ChartRangePadding.Auto" Minimum="0">
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            </ChartPrimaryYAxis>

            <ChartTooltipSettings Enable="true" Header="${point.x}" Format="${point.y}"></ChartTooltipSettings>

            <ChartSeriesCollection>
                <ChartSeries DataSource="@_pressureData"
                             XName="Timestamp"
                             YName="Value"
                             Fill="url(#pressure-gradient)"
                             Type="ChartSeriesType.Area">
                    <ChartSeriesBorder Width="2" Color="#0024db"></ChartSeriesBorder>
                    <ChartMarker>
                        <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Top">
                            <Template>
                                <div>@Math.Round(Convert.ToDouble(context.PointY), 1)</div>
                            </Template>
                        </ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>

        <svg style="height: 0">
            <defs>
                <linearGradient id="pressure-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                    <stop offset="0%" style="stop-color: white; stop-opacity: 0.5" />
                    <stop offset="100%" style="stop-color: #2140dc; stop-opacity: 0.5" />
                </linearGradient>
            </defs>
        </svg>
    }
</div>

@code {
    private List<EnvironmentDataPoint>? _pressureData;

    protected override void OnInitialized()
    {
        _pressureData = environmentService.GetPressureData()
        .Select(pressure => new EnvironmentDataPoint(timestamp: pressure.Timestamp, value: pressure.Value))
        .ToList();
    }
}
